/*

Сортування злиттям (merge) — це алгоритм сортування, в основі якого лежить принцип «Розділяй та володарюй»  

В основі цього способу сортування лежить злиття двох упорядкованих ділянок масиву в одну впорядковану ділянку іншого масиву.

Злиття двох упорядкованих послідовностей можна порівняти з перебудовою двох колон солдатів, вишикуваних за зростом, в одну, де вони також розташовуються за зростом.

Якщо цим процесом керує офіцер, то він порівнює зріст солдатів, перших у своїх колонах і вказує, якому з них треба ставати останнім у нову колону, а кому залишатися першим у своїй.

Так він вчиняє, поки одна з колон не вичерпається — тоді решта іншої колони додається до нової.

*/

#include <iostream>
using namespace std;

void Merge(int* A, int first, int last) // функція, яка об'єднує масиви (merge)
{
    int middle, start, final, j;
    int* mas = new int[255];

    middle = (first + last) / 2; // середнє арифметичне

    start = first; // ліва частина

    final = middle + 1; // права частина

    for (j = first; j <= last; j++) // цикл "від початку до кінця"

        if ((start <= middle) && ((final > last) || (A[start] < A[final]))) 
        {
            mas[j] = A[start];
            start++;
        }

        else

        {
            mas[j] = A[final];
            final++;
        }

    // повернення результату

    for (j = first; j <= last; j++)
        A[j] = mas[j];
    delete[] mas;
};

void MergeSort(int* A, int first, int last) // рекурсивна процедура сортування
{
    if (first < last) 

    {
        MergeSort(A, first, (first + last) / 2); // сортування лівої частини

        MergeSort(A, (first + last) / 2 + 1, last); // сортування правої частини

        Merge(A, first, last); // злиття обох частин
    }
}

void main() 
{
    setlocale(LC_ALL, "Ukr");
    int i, n;
    int* A = new int[255];
    cout << "Розмір масиву: ";
    cin >> n;

    for (i = 1; i <= n; i++)
    {
        cout << i << "-й елемент: ";
        cin >> A[i];
    }
    MergeSort(A, 1, n); // виклик сортувальної процедури
    cout << "Впорядкований масив: "; // виведення впорядкованого масиву

    for (i = 1; i <= n; i++)
    cout << A[i] << " ";
    delete[] A;
}